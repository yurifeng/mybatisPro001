<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

    <!--指引数据库配置的内容-->
    <properties resource="dbConfig.properties"></properties>


    <settings>
        <!--使用驼峰命名法则,用于因实体类的属性和数据库表名的不对称而导致的查询结果字段为空的问题-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--如果插入的字段为null,则为null-->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!--延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--结果集的别名-->
    <typeAliases>
        <typeAlias alias="person" type="com.yuri.maven.entity.Person"/>
        <typeAlias alias="department" type="com.yuri.maven.entity.Department"/>
        <!--<package name="com.yuri.maven.entity"/>-->
        <!--在扫描包的情况下,使用注解实体类起别名-->
    </typeAliases>

    <!--数据库配置的环境(之后的spring框架将取代之)-->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--可以针对不同的数据库,告诉xml中的sql语句用什么数据库的语言来处理-->
    <!--<databaseIdProvider type="DB_VENDOR">-->
    <!--<property name="SQL Server" value="sqlserver"/>-->
    <!--<property name="DB2" value="db2"/>-->
    <!--<property name="Oracle" value="oracle"/>-->
    <!--<property name="MySQL" value="mysql"/>-->
    <!--</databaseIdProvider>-->

    <!--指定要映射的xml文件(注册映射到全局配置中)-->
    <mappers>
        <mapper resource="mapper/PersonMapper.xml"/>
        <mapper resource="mapper/DepartmentMapper.xml"/>
        <mapper resource="mapper/PersonMapperDynamicSQL.xml"/>
        <!--<mapper class="com.yuri.maven.dao.PersonMapper"/>-->
        <!--<package name="com.yuri.maven.dao"/>-->
    </mappers>

</configuration>